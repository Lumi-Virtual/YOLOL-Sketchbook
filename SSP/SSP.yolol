//////////////////////////////////////////////////////////////////////
// String Sound Player
// 2a.0.0
// BSC2-10
// 
// Plays string sound chips.
// 
// 
// 
// Requires one audio signal device, with these field names:
//  SoundOn -> :AO
//  SoundType -> :AT
// 
// Requries these external memory fields:
//  :SSP0     // 1 = Reset. 2 = Pause. 3 = Play. Set to 4 for a tick
//               when a song finishes.
//  :ATrack   // Your string track goes here.
//  :AN
//  :AM
//  :AS
//  :AZ
// 
// 
// 
// If you want to add more tracks that play at the same time, search
// and replace every ':A' with some other letter.
// 
// 
// If you want to add more song players, incriment the number on :SSP0
// to something else.
// 
// 
// Keep in mind that the numbers here are the actual sound numbers,
// and that ones in the code are these +1.
// 
// (all of these sound codes are subject to change)
// Notes
//  a 80   C Natural 5
//  b 81   C Sharp 5
//  c 82   D Natural 5
//  d 83   D Sharp 5
//  e 84   E Natural 5
//  f 85   F Natural 5
//  g 86   F Sharp 5
//  h 87   G Natural 5
//  i 88   G Sharp 5
//  j 89   A Natural 5
//  k 90   A Sharp 5
//  l 91   B Natural 5
//  m 92   C Natural 6
// ^^^^^^ First and Second Chips ^^^^^^
// 
// Drums
//  { 70   Bass Drum
//  | 71   Snare Drum
//  } 72   Tom drum
// 
// Sound Effects
//  n 0
//  o 1
//  p 2
//  q 3
//  r 4
//  s 5
//  t 6
//  u 7
//  v 8
//  w 9
//  x 10
//  y 11
//  z 12
//  0 13
//  1 14
//  2 15
//  3 16
//  4 17
//  5 18
//  6 19
//  7 20
//  8 21
//  9 22
// 
// Endo Voices
//  : 50
//  ; 51
//  < 52
//  = 53
//  > 54
//  ? 55
//  @ 56
//  [ 57
//  \ 58
//  ] 59
//  ^ 60
//  ` 61
// 
// Meow
//  ~ 99
//--+-Bsc|1---+----|----+----|----+----|----+----|----+----|----+----|
t=:ATrack v="`" w="n" x=81 y=-1 :AM=y :AZ=0 :SSP0=2
goto:SSP0
s=:AZ k=t :AS=k-t-- :AM+=(s>v)*(s<w)*x :AO=:AN>y :AT=:AN :AN=y z=:SSP0
s=:AS k=t :AZ=k-t-- :AN+=(s>v)*(s<w)*x :AO=:AM>y :AT=:AM :AM=y gotoz
:SSP0=4 goto1
//--+-Bsc|2---+----|----+----|----+----|----+----|----+----|----+----|
a="a" b="b" c="c" d="d" e="e" f="f" g="g" h="h" i="i" j="j"
k="k" l="l" m="m" goto:SSP0
s=:AZ :AM+=s>a+s>b+s>c+s>d+s>e+s>f+s>g+s>h+s>i+s>j+s>k+s>l+s>m z=:SSP0
s=:AS :AN+=s>a+s>b+s>c+s>d+s>e+s>f+s>g+s>h+s>i+s>j+s>k+s>l+s>m gotoz
//--+-Bsc|3---+----|----+----|----+----|----+----|----+----|----+----|
a="a" b="b" c="c" d="d" e="e" f="f" g="g" h="h" i="i"
v="group low edge" w="group high edge" x=#groupOffset goto:SSP0
s=:AZ :AM+=(s>v)*(s<w)*x+s>a+s>b+s>c+s>d+s>e+s>f+s>g+s>h+s>i z=:SSP0
s=:AS :AN+=(s>v)*(s<w)*x+s>a+s>b+s>c+s>d+s>e+s>f+s>g+s>h+s>i gotoz
//--+----|----+----|----+----|----+----|----+----|----+----|----+----|



//--+----|----+----|----+----|----+----|----+----|----+----|----+----|
a="  aacdfhf hhjlmlj hfhmkhf hfhmkhf ahfdcca aacdfhf hfhmkhf hfhmkhf "
a+="ahfdcca aacdfhf hfhmkhf hfhmkhf ahfdcca aacdfhf hfhmkhf hfhmkhf a"
a+="acdfhf hhjlmlj hfhmkhf hfhmkhf ahfdcca aacdfhf hfhmkhf hfhmkhf ah"
a+="fdcca aacdfhf hfhmkhf hfhmkhf ahfdcca aacdfhf hfhmkhf hfhmk h f d"
a+="fdcca aacdfhf hfhmkhf hfhmkhf ahfdcca aacdfhf hfhmkhf hfhmk h f d"
a+=" cdf hfdcacdfh a hkm hfdcacaacdcacdf hfdcacdfh a hkm hfdca g f d "
a+="cdf hfdcacdfh a hkm hfdcacaacdcacdf hfdcacdfh a hkm hfdca"
:ATrack=a goto1 // Bad Apple Demo Memory Loader
//--+----|----+----|----+----|----+----|----+----|----+----|----+----|